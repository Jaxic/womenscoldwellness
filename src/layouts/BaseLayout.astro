---
export interface Props {
  title: string;
  description: string;
  canonicalURL?: string;
  ogImage?: string;
  ogType?: 'website' | 'article';
  publishedTime?: string;
  author?: string;
  tags?: string[];
}

const { 
  title, 
  description, 
  canonicalURL, 
  ogImage = '/images/social-share.jpg',
  ogType = 'website',
  publishedTime,
  author = 'Women\'s Cold Plunge Benefits',
  tags = []
} = Astro.props;

// Ensure consistent trailing slashes for canonical URLs
const pathname = Astro.url.pathname.endsWith('/') ? Astro.url.pathname : `${Astro.url.pathname}/`;
const fullCanonicalURL = (canonicalURL || new URL(pathname, Astro.site ?? 'https://www.womenscoldwellness.com')).toString();

// Generate full Open Graph image URL
const fullOgImage = new URL(ogImage, Astro.site ?? 'https://www.womenscoldwellness.com').toString();
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content={description}>
  <title>{title}</title>
  
  <!-- Canonical URL -->
  <link rel="canonical" href={fullCanonicalURL} />
  
  <!-- Preconnect to external origins -->
  <link rel="preconnect" href="https://www.googletagmanager.com">
  <link rel="preconnect" href="https://www.google-analytics.com">
  
  <!-- Preload critical fonts -->
  <link rel="preload" href="/fonts/montserrat-600.ttf" as="font" type="font/ttf" crossorigin>
  <link rel="preload" href="/fonts/montserrat-700.ttf" as="font" type="font/ttf" crossorigin>
  <link rel="preload" href="/fonts/montserrat-800.ttf" as="font" type="font/ttf" crossorigin>
  <link rel="preload" href="/fonts/opensans-400.ttf" as="font" type="font/ttf" crossorigin>
  <link rel="preload" href="/fonts/opensans-600.ttf" as="font" type="font/ttf" crossorigin>
  
  <!-- Open Graph Tags -->
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={fullOgImage} />
  <meta property="og:url" content={fullCanonicalURL} />
  <meta property="og:type" content={ogType} />
  <meta property="og:site_name" content="Cold Plunge Benefits for Women" />
  <meta property="og:locale" content="en_US" />
  
  {publishedTime && <meta property="article:published_time" content={publishedTime} />}
  {author && <meta property="article:author" content={author} />}
  {ogType === 'article' && <meta property="article:section" content="Health & Wellness" />}
  {tags.map((tag) => <meta property="article:tag" content={tag} />)}
  
  <!-- Twitter Card Tags -->
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content={title} />
  <meta name="twitter:description" content={description} />
  <meta name="twitter:image" content={fullOgImage} />
  
  <!-- Additional SEO Meta Tags -->
  <meta name="author" content={author} />
  
  
  <slot name="head" />
</head>
<body>
  <slot />
  
  <!-- Google Analytics 4 - Moved to bottom to prevent forced reflow -->
  <script>
    // Load Google Analytics with idle callback to prevent layout thrashing
    function loadGoogleAnalytics() {
      // Load gtag script
      const script = document.createElement('script');
      script.async = true;
      script.src = 'https://www.googletagmanager.com/gtag/js?id=G-LYL708DKYY';
      document.head.appendChild(script);
      
      // Initialize analytics
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'G-LYL708DKYY', {
        page_title: document.title,
        page_location: window.location.href
      });
      window.gtag = gtag;
    }
    
    // Use requestIdleCallback to defer analytics loading
    if ('requestIdleCallback' in window) {
      requestIdleCallback(loadGoogleAnalytics);
    } else {
      // Fallback for browsers without requestIdleCallback
      setTimeout(loadGoogleAnalytics, 100);
    }
  </script>
  
  <!-- Vercel Analytics -->
  <script>
    import { inject } from '@vercel/analytics';
    inject();
  </script>
</body>
</html>